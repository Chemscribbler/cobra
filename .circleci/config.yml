version: 2
jobs:
  build:
    working_directory: ~/muyjohno/cobra
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
    - image: circleci/ruby:2.4-node
      command: /sbin/init
      environment:
      - RAILS_ENV: test
      - PGHOST: 127.0.0.1
      - PGUSER: root
    - image: circleci/postgres:9.6.2-alpine
      environment:
      - POSTGRES_USER: root
      - POSTGRES_DB: cobra_circle
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - restore_cache:
        keys:
        - v1-dep-{{ .Branch }}-
        - v1-dep-master-
        - v1-dep-
    - run: 'bundle check --path=vendor/bundle || bundle install --path=vendor/bundle
        --jobs=4 --retry=3 '
    # This is based on your 1.0 configuration file or project settings
    - run: mv config/secrets.example.yml config/secrets.yml
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        - vendor/bundle
        - ~/.bundle
    # The following line was run implicitly in your 1.0 builds based on what CircleCI inferred about the structure of your project. In 2.0 you need to be explicit about which commands should be run. In some cases you can discard inferred commands if they are not relevant to your project.
    - run: |-
        mkdir -p config && echo 'test:
          adapter: postgresql
          database: cobra_circle
          username: root
          host: localhost
        ' > config/database.yml
    - run: |-
        export RAILS_ENV="test"
        export RACK_ENV="test"
        bundle exec rake db:create db:schema:load --trace
    # Test
    - run: |-
        export RAILS_ENV="test"
        export RACK_ENV="test"
        bundle exec rspec --color --require rails_helper --format progress spec
    # Teardown
    # Save test results
    - store_test_results:
        path: /tmp/circleci-test-results
    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results
